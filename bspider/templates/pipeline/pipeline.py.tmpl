"""
@description=default
"""
from bspider.parser import BasePipeline


class ${pipeline_name}(BasePipeline):

    """Pipeline支持协程、常规两种编程方式
    ***协程虽然能提升效率但协程编程是棘手的
    多Pipeline执行顺序：
    Pipe1.process_item -> Pipe2.process_item ->... ->
    下载 ->
    Pipe1.process_item -> Pipe2.process_item
    """

    def process_item(self, item):
        """
        对item进行处理,各个pipeline重写
        可以yield返回也可以return
        返回类型为自定义的类型，会传递给后面的pipeline，返回None将会丢弃这个item
        :param item: previous pipeline result
        :return: param to next pipeline
        """
        return item